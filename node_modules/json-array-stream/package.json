{
  "name": "json-array-stream",
  "description": "Streaming JSON.stringify() that returns an array",
  "version": "0.1.2",
  "scripts": {
    "test": "make test"
  },
  "devDependencies": {
    "mocha": "~1.12",
    "cat-stream": "*"
  },
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jonathanong/json-array-stream.git"
  },
  "bugs": {
    "url": "https://github.com/jonathanong/json-array-stream/issues",
    "email": "me@jongleberry.com"
  },
  "license": "MIT",
  "engines": {
    "node": ">= 0.10"
  },
  "readme": "# JSON Array Stream [![Build Status](https://travis-ci.org/jonathanong/json-array-stream.png)](https://travis-ci.org/jonathanong/json-array-stream)\n\n`JSON.stringify([])` in streaming form.\nSimilar to [JSONStream.stringify()](https://github.com/dominictarr/JSONStream#jsonstreamstringifyopen-sep-close) except it is, by default, a binary stream, and it is a streams2 implementation.\n\n## Example\n\nThe main use case for this is to stream a MongoDB query to a web client. This is to be used only with streaming arrays, not objects.\n\n```js\nvar streamify = require('json-array-stream')\n\napp.get('/things', function (req, res, next) {\n  res.setHeader('Content-Type', 'application/json; charset=utf-8')\n\n  db.things.find()\n  .stream()\n  .pipe(streamify())\n  .pipe(res)\n})\n```\n\nwill yield something like\n\n```json\n[\n{\"_id\":\"123412341234123412341234\"}\n,\n{\"_id\":\"123412341234123412341234\"}\n]\n\n```\n\n## Separators\n\n* The stream always starts with `'[\\n'`.\n* Documents are separated by `'\\n,\\n'`.\n* The stream is terminated with `'\\n]\\n'`.\n\n## API\n\n### streamify([options])\n\nReturns a `Transform` stream.\nThe options are passed to the `Transform` constructor.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "json-array-stream@0.1.2",
  "dist": {
    "shasum": "d3d897340aedfa2dc5db5798b3d7c286f213aaf5",
    "tarball": "http://registry.npmjs.org/json-array-stream/-/json-array-stream-0.1.2.tgz"
  },
  "_from": "json-array-stream@",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "jongleberry",
    "email": "jonathanrichardong@gmail.com"
  },
  "maintainers": [
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "d3d897340aedfa2dc5db5798b3d7c286f213aaf5",
  "_resolved": "https://registry.npmjs.org/json-array-stream/-/json-array-stream-0.1.2.tgz"
}
